<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sbs.sjy.jy.dao.ArticleDao">
	<select id="getForPrintArticles" resultMap="article">
		SELECT A.*,
		M.name AS
		extra__writer,
		IFNULL(SUM(AL.point), 0) AS extra__likePoint
		FROM article
		AS A
		INNER JOIN `member` AS M
		ON A.memberId = M.id
		LEFT JOIN articleLike
		AS AL
		ON A.id = AL.articleId
		WHERE A.displayStatus = 1
		<choose>
			<when test="searchType == 'title'">
				AND A.title LIKE CONCAT('%',#{searchKeyword},'%')
			</when>
			<when test="searchType == 'body'">
				AND A.body LIKE CONCAT('%',#{searchKeyword},'%')
			</when>
			<when test="searchType == 'titleAndBody'">
				AND (A.title LIKE CONCAT('%',#{searchKeyword},'%') OR
				A.body LIKE CONCAT('%',#{searchKeyword},'%'))
			</when>
		</choose>
		GROUP BY A.id
		ORDER BY A.id DESC
		<if test="limitCount != null">
			LIMIT #{limitFrom}, #{limitCount}
		</if>
	</select>

	<select id="getForPrintArticleById" resultMap="article">
		SELECT A.*,
		M.nickname AS extra__writer
		FROM article AS A
		INNER JOIN member AS M
		ON
		A.memberId = M.id
		WHERE A.displayStatus = 1
		AND A.id = #{id}
	</select>

	<select id="getArticlesCount" resultType="int">
		SELECT COUNT(*) AS cnt
		FROM article AS A
		INNER JOIN board AS B
		ON A.boardId = B.id
		WHERE B.code = #{boardCode}
		<choose>
			<when test="searchType == 'title'">
				AND A.title LIKE CONCAT('%',#{searchKeyword},'%')
			</when>
			<when test="searchType == 'body'">
				AND A.body LIKE CONCAT('%',#{searchKeyword},'%')
			</when>
			<when test="searchType == 'titleAndBody'">
				AND (A.title LIKE CONCAT('%',#{searchKeyword},'%') OR
				A.body LIKE CONCAT('%',#{searchKeyword},'%'))
			</when>
		</choose>
	</select>

	<select id="getArticleById" resultType="Article">
		SELECT *
		FROM
		article
		WHERE
		id = #{id}
	</select>

	<select id="getBoardByCode" resultType="Board">
		SELECT *
		FROM
		board
		WHERE
		`code` = #{code}
	</select>

	<select id="getLikePointByMemberId" resultType="int">
		SELECT
		IFNULL(SUM(AL.point), 0) AS `point`
		FROM articleLike AS AL
		WHERE
		AL.articleId = #{id}
		AND AL.memberId = #{memberId}
	</select>

	<select id="getLikePoint" resultType="int">
		SELECT
		IFNULL(SUM(AL.point), 0) AS `point`
		FROM articleLike AS AL
		WHERE
		AL.articleId = #{id}
	</select>

	<insert id="likeArticle" parameterType="map">
		INSERT INTO articleLike
		SET regDate
		= NOW(),
		articleId = #{id},
		memberId = #{memberId},
		`point`
		=
		1
	</insert>

	<insert id="write" useGeneratedKeys="true" keyProperty="id">
		INSERT
		INTO article
		SET regDate = NOW(),
		updateDate = NOW(),
		title = #{title},
		body = #{body},
		memberId = #{memberId},
		boardId = #{boardId},
		displayStatus = 1
	</insert>
	<update id="modify">
		UPDATE article
		<set>
			updateDate = NOW(),
			<if test="title != null">title = #{title},</if>
			<if test="body != null">body = #{body},</if>
		</set>
		WHERE id = #{id}
	</update>
	<update id="increaseArticleHit">
		UPDATE article
		SET hit = hit + 1
		WHERE id = #{id}
	</update>
	<delete id="cancelLikeArticle">
		DELETE FROM articleLike
		WHERE articleId = #{id}
		AND
		memberId = #{memberId}
	</delete>

	<resultMap type="Article" id="article">
		<id property="id" column="id" />
		<id property="hit" column="hit" />
		<id property="regDate" column="regDate" />
		<id property="updateDate" column="updateDate" />
		<id property="delDate" column="delDate" />
		<id property="delStatus" column="delStatus" />
		<id property="title" column="title" />
		<id property="body" column="body" />
		<id property="memberId" column="memberId" />
		<id property="boardId" column="boardId" />
		<association property="extra" javaType="map">
			<id property="writer" column="extra__writer" />
			<id property="likePoint" column="extra__likePoint" />
		</association>
	</resultMap>

</mapper>